{"ast":null,"code":"import _objectSpread from \"C:/Projects/Web/Portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = form => {\n  return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\r\n * Send a form the specific EmailJS service\r\n * @param {string} serviceID - the EmailJS service ID\r\n * @param {string} templateID - the EmailJS template ID\r\n * @param {string | HTMLFormElement} form - the form element or selector\r\n * @param {object} options - the EmailJS SDK config options\r\n * @returns {Promise<EmailJSResponseStatus>}\r\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n  const opts = buildOptions(options);\n  const publicKey = opts.publicKey || store.publicKey;\n  const blockHeadless = opts.blockHeadless || store.blockHeadless;\n  const storageProvider = store.storageProvider || opts.storageProvider;\n  const blockList = _objectSpread(_objectSpread({}, store.blockList), opts.blockList);\n  const limitRate = _objectSpread(_objectSpread({}, store.limitRate), opts.limitRate);\n  if (blockHeadless && isHeadless(navigator)) {\n    return Promise.reject(headlessError());\n  }\n  const currentForm = findHTMLForm(form);\n  validateParams(publicKey, serviceID, templateID);\n  validateForm(currentForm);\n  const formData = new FormData(currentForm);\n  if (isBlockedValueInParams(blockList, formData)) {\n    return Promise.reject(blockedEmailError());\n  }\n  if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n    return Promise.reject(limitRateError());\n  }\n  formData.append('lib_version', '4.4.1');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', publicKey);\n  return sendPost('/api/v1.0/email/send-form', formData);\n};","map":{"version":3,"names":["store","sendPost","buildOptions","validateForm","validateParams","isHeadless","headlessError","isBlockedValueInParams","blockedEmailError","isLimitRateHit","limitRateError","findHTMLForm","form","document","querySelector","sendForm","serviceID","templateID","options","opts","publicKey","blockHeadless","storageProvider","blockList","_objectSpread","limitRate","navigator","Promise","reject","currentForm","formData","FormData","location","pathname","append"],"sources":["C:/Projects/Web/Portfolio/node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import { store } from '../../store/store';\r\nimport { sendPost } from '../../api/sendPost';\r\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\r\nimport { validateForm } from '../../utils/validateForm/validateForm';\r\nimport { validateParams } from '../../utils/validateParams/validateParams';\r\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\r\nimport { headlessError } from '../../errors/headlessError/headlessError';\r\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\r\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\r\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\r\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\r\nconst findHTMLForm = (form) => {\r\n    return typeof form === 'string' ? document.querySelector(form) : form;\r\n};\r\n/**\r\n * Send a form the specific EmailJS service\r\n * @param {string} serviceID - the EmailJS service ID\r\n * @param {string} templateID - the EmailJS template ID\r\n * @param {string | HTMLFormElement} form - the form element or selector\r\n * @param {object} options - the EmailJS SDK config options\r\n * @returns {Promise<EmailJSResponseStatus>}\r\n */\r\nexport const sendForm = async (serviceID, templateID, form, options) => {\r\n    const opts = buildOptions(options);\r\n    const publicKey = opts.publicKey || store.publicKey;\r\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\r\n    const storageProvider = store.storageProvider || opts.storageProvider;\r\n    const blockList = { ...store.blockList, ...opts.blockList };\r\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\r\n    if (blockHeadless && isHeadless(navigator)) {\r\n        return Promise.reject(headlessError());\r\n    }\r\n    const currentForm = findHTMLForm(form);\r\n    validateParams(publicKey, serviceID, templateID);\r\n    validateForm(currentForm);\r\n    const formData = new FormData(currentForm);\r\n    if (isBlockedValueInParams(blockList, formData)) {\r\n        return Promise.reject(blockedEmailError());\r\n    }\r\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\r\n        return Promise.reject(limitRateError());\r\n    }\r\n    formData.append('lib_version', '4.4.1');\r\n    formData.append('service_id', serviceID);\r\n    formData.append('template_id', templateID);\r\n    formData.append('user_id', publicKey);\r\n    return sendPost('/api/v1.0/email/send-form', formData);\r\n};\r\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,aAAa,QAAQ,0CAA0C;AACxE,SAASC,sBAAsB,QAAQ,2DAA2D;AAClG,SAASC,iBAAiB,QAAQ,kDAAkD;AACpF,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC3B,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAACF,IAAI,CAAC,GAAGA,IAAI;AACzE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAOC,SAAS,EAAEC,UAAU,EAAEL,IAAI,EAAEM,OAAO,KAAK;EACpE,MAAMC,IAAI,GAAGjB,YAAY,CAACgB,OAAO,CAAC;EAClC,MAAME,SAAS,GAAGD,IAAI,CAACC,SAAS,IAAIpB,KAAK,CAACoB,SAAS;EACnD,MAAMC,aAAa,GAAGF,IAAI,CAACE,aAAa,IAAIrB,KAAK,CAACqB,aAAa;EAC/D,MAAMC,eAAe,GAAGtB,KAAK,CAACsB,eAAe,IAAIH,IAAI,CAACG,eAAe;EACrE,MAAMC,SAAS,GAAAC,aAAA,CAAAA,aAAA,KAAQxB,KAAK,CAACuB,SAAS,GAAKJ,IAAI,CAACI,SAAS,CAAE;EAC3D,MAAME,SAAS,GAAAD,aAAA,CAAAA,aAAA,KAAQxB,KAAK,CAACyB,SAAS,GAAKN,IAAI,CAACM,SAAS,CAAE;EAC3D,IAAIJ,aAAa,IAAIhB,UAAU,CAACqB,SAAS,CAAC,EAAE;IACxC,OAAOC,OAAO,CAACC,MAAM,CAACtB,aAAa,CAAC,CAAC,CAAC;EAC1C;EACA,MAAMuB,WAAW,GAAGlB,YAAY,CAACC,IAAI,CAAC;EACtCR,cAAc,CAACgB,SAAS,EAAEJ,SAAS,EAAEC,UAAU,CAAC;EAChDd,YAAY,CAAC0B,WAAW,CAAC;EACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACF,WAAW,CAAC;EAC1C,IAAItB,sBAAsB,CAACgB,SAAS,EAAEO,QAAQ,CAAC,EAAE;IAC7C,OAAOH,OAAO,CAACC,MAAM,CAACpB,iBAAiB,CAAC,CAAC,CAAC;EAC9C;EACA,IAAI,MAAMC,cAAc,CAACuB,QAAQ,CAACC,QAAQ,EAAER,SAAS,EAAEH,eAAe,CAAC,EAAE;IACrE,OAAOK,OAAO,CAACC,MAAM,CAAClB,cAAc,CAAC,CAAC,CAAC;EAC3C;EACAoB,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC;EACvCJ,QAAQ,CAACI,MAAM,CAAC,YAAY,EAAElB,SAAS,CAAC;EACxCc,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAEjB,UAAU,CAAC;EAC1Ca,QAAQ,CAACI,MAAM,CAAC,SAAS,EAAEd,SAAS,CAAC;EACrC,OAAOnB,QAAQ,CAAC,2BAA2B,EAAE6B,QAAQ,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}